자바스크립트 경험치


1. HTML파일안에 JSP를 쓰는 법
script태그를 쓴다.





2.HTML 파일안에 JSP파일을 연결하는법

head에 
<script src="???.js"></script> 
를 쓴다






3. 컴파일 이란?

사람이 쓴 소스파일을 컴퓨터가 알아듣는 또다른 언어(2진수)로 변환하는 것을 말한다

*자바스크립트, 파이썬, PHP등의 언어는 컴파일 과정을 거치지 않는다






4.자바스크립트의 구성요소

(변수)
(함수)-공식은 내가 정하거나 이미 정해진 함수가 있다.
     (*조건문-if문, switch문)
     (*반복문-for문, while문)
(객체)-키(속성)를 내가 정하거나 이미 정해진 객체가    있다.그리고 그 키(속성)중에서 함수인 키를 메서드 라고 부른다.
(배열)
(이벤트)
(클로저)

가 있다.







5. 변수 선언하는 법

var x = 10;
var y = "Hello";





6. (정해진 함수의 예시) prompt함수란?
웹페이지를 열면 메세지가 뜨면서 사용자로부터 변수 값을 입력을 받는다(문자열로 반환)

사용예시
var name=prompt("당신의 이름을 입력해주세요")






7. 자바스크립트의 객체(오브잭트)란?

객체명.키명
이렇게 쓴다.

객체의 예시
Math.sqrt(25)
today.getFullYear()
numbers.length



*객체를 RPG캐릭터로 설명

let character = {
  level: 1,
  hp: 100,
  mana: 50,
  attack: 10,
  defense: 5,
  levelUp: function() {
    this.level++;
    this.hp += 10;
    this.mana += 5;
  },
  attackTarget: function(target) {
    let damage = this.attack - target.defense;
    target.hp -= damage;
    console.log(`${target.name}에게 ${damage}의 피해를 입혔습니다!`);
  }
};


character를 객체, 레벨이나 HP, 마나 등은 키(속성),레벨업이나 공격은 메소드 라고 한다(함수니까).

객체라는 개념이 왜 있냐면
캐릭터를 한명만 만드는 것이 아니니까
100명 1000명 만들어도 스텟은 다 동일하니까 
"캐릭터의 툴 = 객체"라고 이해하면 편하다. 

객체 호출법
tarakpower= new character(1,300,300,4)

이러면 닉네임이 tarakpower라는 레벨1에 HP300 MP300 방어력4 캐릭터가 생성되는 것이다.



*객체를 만들 때 {} 중괄호를 사용하고, 각 키와 값을 : 콜론으로 구분한다. 







8. 자바와 자바스크립트 자료형 차이

자바스크립트는 데이터를 인식해 자료형이 자동으로 정해진다.
자바는 자료형을 정해줘야 한다.





9.블록이란?





10. 함수 let, var 차이?

공통점

 변수선언 함수이다. 
 선언한뒤에 변수의 값을 바꿀 수 있다. 

차이점

 var는 자바스크립트의 호이스팅(변수선언 위치에 상관  
 없이 항상 제일 먼저 읽음)때문에 개발자가 예측하지 못
 한 상황이 자주 발생한다. 그것을 대체하기 위해 let을 
 사용하는 것을 권고한다

 let은 중복선언으로 값을 바꿀 수 없다.(에러뜸) 
 이것은 햇갈릴 수 있는데, 변수를 선언하는 것과
 변수에 값을 넣는것은 다르다.


*let의 값을 변경하는 방법

--------------------------------
let x = 5

x=7 //가능

let x = 7 //불가능
--------------------------------





11. let과 const차이점
값을 변경할수 있고없고의 차이
그 외에는 다 똑같음





12. 연산자란?

+,-,*,/,%(나머지)
==,!=,>,>=,<
&&(and), ||(or), !(not)
...이런거다

*=과 ==의 차이점은 =은 값을 선언, 할당할때 쓴다.

*-=, *=, /=, %=는 앞에 변수에 뒤에 값을 더한 뒤(연산한 뒤) 앞에 변수에 대입한다
----------------------------------
let a=30;
a+=10

이러면 a는 40이 된다
----------------------------------

*조건연산자(삼항연산자) 란?
let 변수명=(조건식)?값1: 값:2;
여기서 조건식에 해당하는 값을 변수에 넣는다
이거 잘쓰면 코드를 많이 단축시킬 수 있음. 중요




13. 컴퓨터가 코드를 읽는 순서는 왼쪽에서 오른쪽이다.


let a=10;
let c=a++;
document.write(c);

이러면 출력은 10이고 a는 11이 된다.



let a=10;
let c=++a;
document.write(c);

이러면 출력은 11이고 a는 11이 된다.





14. 삼항연산자 결과표


and(&&) 
T  T -> T
T  F -> F
F  T -> F
F  F -> F

or(||)
T  T -> T
T  F -> T
F  T -> T
F  F -> F

not(!)
!(T) -> F
!(F) -> T






15. if문, else, else if 란?


if문.----

if (조건) {
조건이 참일 때 실행되는 코드;
}


*블록 안에 또다른 if문이 들어갈 수 있다.(중첩if문)


if else문.----

if (조건) {
조건이 참일 때 실행되는 코드;
}
else {
그 외 일때 실행되는 코드;
}


else if문.----

if (조건1) {
조건1이 참일 때 실행되는 코드;
}
else if (조건2) {
조건2가 참일 때 실행되는 코드;
}
else{
그 외 일때 실행되는 코드;
}







16. switch case문?

swich (조건식){
  case 값1:
    실행할 코드1;
    break;
  case 값2:
    실행할 코드2;
    break;
.
.
.   
  default:
    해당하는 case값이 없을경우 실행할 코드;
 }


*break의 효과는 한 case의 코드가 실행된뒤 블럭밖으로 빠져나오게 해준다.




17. do while문 (반복문)


do {
  반복할 코드
} while (조건);



*자주하는 실수는 "초기화"와 "반복 후 실행"할 것을 쓰는 걸 까먹는 것.


18. for문 (반복문)

for (초기화; 조건; 반복 후 실행) {
    반복할 코드
}

여기서 초기화란 반복문이 시작될때 한 번만 실행되는 부분이다 

반복후 실행의 예는 i++ 같은게 있다.



*for문과 do while문의 차이점
for문은 반복전에 검사를 하여 조건이 거짓이면 실행하지 않는다
do while문은 한번 일단 실행하고 그 후에 검사를 한다.





20. 레이블이 있는 break문이란?

레이블명:
for (???) {
  for (???) {
      반복할 코드
      if (???) {
          break 레이블명;
               }
            }
         }

"break 레이블명;" 에서 외부 반복문을 종료한다.
레이블을 사용하면 특정 레이블로 이동하여 코드 블록을 빠져나올 수 있다.






21. continue와 break의 차이점?


continue는 현재 반복을 종료하고 다음 반복으로 진행.

break는 반복문 자체를 종료.






22. 함수의 반환값, 매개변수란?


function addNumbers(a, b) {
  return a + b;
}

여기서 addNumbers라는 함수를 호출할 때
매개변수 a와 b의 값을 같이 입력받는다
예를들면 addNumbers(5, 3) 이런식으로.

반환값은 8 이고

let result = addNumbers(5, 3);
console.log(result); //8이 출력됨

이렇게 반환값을 얻기 위해서는 변수로 선언을 해야 얻을 수 있다.





23. 익명함수와 일반함수의 차이

일반 함수 선언법
function add(x, y) {
  return x + y;
}

익명함수 선언법
var add = function(x, y) {
  return x + y;
};


익명함수는 주로 일회성 사용에 쓴다.






24. ':' 의 의미

let max;
max=(x>y)?x:y;

':'는 "조건이 거짓일 때 대응하는 값"이라는 뜻이다.
즉, x와y중 x가 크다면 max에 x를 넣고 아니면 y를 넣으라는 것이다.






25. 지역변수와 전역변수

지역변수와 전역변수가 같아도 동명이인처럼 아무 상관이 없다.
지역변수의 예는 함수 안에 선언된 변수나 매개변수 등이 있다.






26. 함수내에서 전역변수를 선언하는 방법?

let, var, 또는 const 키워드 없이 선언하면 
함수안에 있더라도 전역변수가 된다.







27. 콜백 함수란?

A라는 함수의 매개변수에 B라는 함수를 넣는 것.
B가 콜백 함수가 된다.






28. parseInt()란?
문자열을 정수로 변환하는 함수

*parseFloat는 문자열을 실수로 변환(소수점까지 표시되는 숫자)






29. this란?
상황과 위치에 따라 지칭하는 것이 달라짐
예를 들면
1. 전역에서 this
브라우저를 가리킨다.

2. 함수 내에서 this
브라우저를 가리킨다.

3. 메소드 내부에서 this
객체의 메소드 안에서 this는 그 함수를 소유한 객체를 가리킨다.




30. DOM(Document Object Model)이란?

한마디로 CSS는 선택자가 있으면 자바스크립트는 DOM이 있다고 볼수 있다. 같은 용도 같은 의미.

거의 모든 브라우저에서 제공하는 JavaScript API(일종의 인터페이스)다.
웹을 동적으로 변경하고 싶을 때 JavaScript를 사용하여 DOM을 조작한다.

자바스크립트가 항상 웹관련 언어로만 쓰이는 것은 아니니까. 동적인 웹을 만들 때 상호작용하는 인터페이스가 DOM이라는 것.


* "document.~~"으로 시작하면 모두 DOM에 접근한 것이다.

* class는 CSS전용 name은 자바스크립트 전용 호출할 때 쓰는 선택자



31. document.myForm.ABC.value;의 의미는?

현재 문서에서"myForm"이라는 name을 가진 폼 안에서 "ABC"라는 name을 가진 input태그의 입력값(value)을 뜻한다.

*document는 현재 문서(웹페이지)를 뜻한다.






32. DOM에 접근한 예시

1. document.getElementById('ABC')
ABC라는 id를 가진 요소를 뜻함

2. document.getElementsByClassName('ABC')
ABC라는 클래스를 가진 요소를 뜻함

3. document.getElementsByTagName('ABC')
ABC라는 태그를 가진 요소를 뜻함

4. document.querySelector('.ABC')
CSS 선택자를 사용하여 ABC라는 클래스를 가진 "제일 첫번째 요소"를 뜻함

5. document.querySelectorAll('#ABC')
CSS 선택자를 사용하여 ABC라는 ID를 가진 "모든 요소"를 뜻함


*document.body.style.backgroundColor = "red"; 이런식으로 자바스크립트로도 웹의 배경색을 변경 가능하다.






33. 이벤트란?
사용자의 동작(키보드, 마우스)에 반응하는 웹의 상태 변화.


이벤트를 감지하는 이벤트리스너의 형식

element.addEventListener(이벤트, 실행할 함수, options);

특정 이벤트를 감지하면 특정 요소에서 그때 실행될 함수를 쓴다.
option은 추가기능으로 안써도 상관없음.


이벤트의 예시는

mouseover, mouseout, click, load(최초로 문서를 읽어들이는 시점), submit, ...








34. '.innerHTML'란?

자바스크립트로 html파일의 특정 요소를 호출한 뒤 그 요소를 수정하는 것. 태그도 수정할 수 있다. 그냥 html자체를 수정한다고 생각해도 된다.









36. input태그는 특수하게 html태그 속성란에 자바스크립트 이벤트 핸들러인 onclick속성을 사용할 수 있다.



이것을 활용하여 회원가입 폼을 jsp와 연동할 수 있다.
예를 들면

html파일-------
<input type="button" value="로그인" onclick="login()">
---------------

자바스크립트파일----
function login(){
로그인 버튼을 눌렀을 때 실행될 함수코드
}
-------------------





37. toggle은 두 가지 상태를 전환하는 데 사용된다.
(배그 설정 (유지, 토글)) on off 스위치라고 생각하면 편하다.








38. 배열이란?
선언방법이 여러개다

1. let A = new Array(1, 2, 3, 4, 5);
자바스크립트의 내장 객체 Array를 사용

2. let A = [1, 2, 3, 4, 5];
그냥 선언




*배열 요소 접근법([0]부터 시작이다)
var fruits = ['사과', '바나나', '딸기', '오렌지'];

console.log(fruits[0]);  // '사과'
console.log(fruits[1]);  // '바나나'
console.log(fruits[2]);  // '딸기'
console.log(fruits[3]);  // '오렌지'



*배열요소 수정 가능
let a4=["포도","사과"];
a4[1]="감";


*자바스크립트는 데이터의 type이 다양하게 한 배열에 들어갈 수 있다. 대부분의 다른 언어는 불가능






39. select태그 란?

드롭다운메뉴다.

<select>
  <option value="option1">옵션 1</option>
  <option value="option2">옵션 2</option>
  <option value="option3">옵션 3</option>
</select>


*select는 options[0], options[1], options[2] 이런 식으로 해당 옵션을 구별할 수 있다. (htmlCollection 객체)

select의 name값.selectedIndex는 선택된 옵션의 [0], [1], [2], ...이런 숫자다.

(이건 해봐야 암...)






40. alert(typeof 변수명)의 뜻은?

변수의 타입을 출력한다.






41. eval()의 뜻은?

문자열을 자바스크립트 코드로 변환한다.

예시)
let A = "console.log('Hello, World!');";
eval(A); 


console.log('Hello, World!');라는 문자열(string)이 eval을 만나면서 자바스크립트로 변환된다.
그러므로 콘솔창에 Hello, World!가 출력된다.






42. 햇갈릴 수 있는 부분
let test=[]
let test={}
이 둘중 뭐가 객체고 뭐가 배열인가?


let test=[] : 배열
let test={} : 객체






43. Date객체란?

Date객체는 JavaScript에서 날짜와 시간을 다루기 위한 내장 객체이다.







44.<form onsubmit="return A()">란?

사용자가 폼을 제출할 때(<input type="submit"> 버튼을 클릭하거나 Enter 키를 누를 때) 함수 A()를 실행한다.





45. DOM에서 Node객체란?

Node객체
(<html>, <head>, <body>, <div>, <p>, <a>)
이런 속성(?)을 갖고있고??...모르겠다.

그냥 대충
HTML문서만으로는 정적인 웹사이트 인데
자바스크립트를 이용해서 동적으로 만들 수 있다.
이런 뜻일 듯.

* "동적이다" 라는 것의 범위는 사실 사용자와 상호작용하면 다 동적이라고 할 수 있다. 드롭다운메뉴도 동적이라고 할 수 있다.






46. 로컬스토러지 란?

localStorage.setItem('username', 'John');
로컬 스토러지에 데이터 저장
localStorage.getItem('username');
로컬 스토러지에서 데이터 읽기
localStorage.removeItem('username');
로컬 스토러지에서 데이터 삭제

브라우저에서 제공되는 저장공간. 간단하게 키와 값을 한 쌍으로 데이터를 로컬에 저장하는 방법. 



*로컬(local)이란 사용자의 컴퓨터를 뜻한다.



47. $() 란?

 jQuery의 함수이다. $() 함수는 선택자(selector)를 받아 해당하는 요소를 jQuery 객체로 반환한다.


*jQuery란 자바스크립트의 라이브러리중 하나다.







